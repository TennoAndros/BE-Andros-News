{
  "GET /api": {
    "description": "Serves up a json representation of all the available endpoints of the api"
  },

  "GET /api/topics": {
    "description": "Serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },

  "POST /api/topics": {
    "description": "Adds a new topic to the database and responds with an object with the newly added created topic",
    "queries": [],
    "exampleResponse": {
      "topics": [
        { "slug": "newTopic", "description": "new topic description!" }
      ]
    }
  },

  "GET /api/articles": {
    "description": "Serves an array of all articles and a comment_count of all articles",
    "queries": [
      "author",
      "topic",
      "sort_by[title or topic or author or created_at or votes]",
      "order[ASC or DESC]",
      "created_at"
    ],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 1,
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6,
          "article_img_url": "link to an image"
        }
      ],
      "total_count": 1
    }
  },

  "POST /api/articles": {
    "description": "Post a new article and responds with an object containing the new added article",
    "queries": [],
    "exampleRequest": {
      "author": "anAuthor",
      "title": "Some title",
      "body": "A body.",
      "topic": "manga"
    },
    "exampleResponse": {
      "articles": [
        {
          "article_id": 44,
          "author": "anAuthor",
          "title": "Some title",
          "body": "A body",
          "created_at": "2021-01-10T05:00:00.000Z",
          "topic": "manga",
          "votes": 0,
          "comment_count": 0
        }
      ]
    }
  },

  "GET /api/articles/:article_id": {
    "description": "Serves an object of specified article based on article_id and a comment_count of this article",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 9,
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "article_img_url": "link to an image",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },

  "PATCH /api/articles/:article_id": {
    "description": "Serves an article object with new updated vote count",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 9,
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 40,
          "comment_count": 6
        }
      ]
    }
  },

  "DELETE /api/articles/:article_id": {
    "description": "Deletes the article from the database and all of its comments base on article id",
    "queries": [],
    "exampleResponse": "does not send a response"
  },

  "GET /api/articles/:article_id/comments": {
    "description": "Serves an array of comment objects of specified article base on article_id",
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 15,
          "body": "Oh, I've got compassion running out of my nose, pal! I'm the Sultan of Sentiment!",
          "votes": 16,
          "author": "butter_bridge",
          "article_id": 9,
          "created_at": "2023-05-30T15:59:13.341Z,"
        },
        {
          "comment_id": 18,
          "body": "One piece will never end. Do we actually want it?",
          "votes": 999,
          "author": "Andros",
          "article_id": 7,
          "created_at": "2022-06-30T15:59:13.341Z"
        }
      ]
    }
  },

  "POST /api/articles/:article_id/comments": {
    "description": "Posts a new comment to the specified article and serves an object with the new created comment",
    "queries": [],
    "exampleResponse": {
      "comment": {
        "comment_id": 45,
        "body": "What i'm going to do?",
        "article_id": 2,
        "author": "Andros",
        "votes": 0,
        "created_at": "2023-05-15T05:00:00.000Z"
      }
    }
  },

  "PATCH /api/comments/:comment_id": {
    "description": "Serves a comment object with new updated vote count",
    "queries": [],
    "expectedStatus": 204,
    "exampleRequest": { "inc_votes": -1 },
    "exampleResponse": {
      "comment_id": 55,
      "article_id": 2,
      "created_at": "2021-01-10T05:00:00.000Z",
      "author": "niceGuy52",
      "votes": -1,
      "body": "not a great article.."
    }
  },

  "DELETE /api/comments/:comment_id": {
    "description": "Deletes the comment based on comment id",
    "queries": [],
    "exampleResponse": "does not send a response"
  },

  "GET /api/users": {
    "description": "Serves an array of the users as objects.",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "andros",
          "name": "andy",
          "avatar_url": "link to an image"
        },
        {
          "username": "wolfric",
          "name": "albus",
          "avatar_url": "link to an image"
        }
      ]
    }
  },

  "POST /api/users": {
    "description": "Posts a new user and serves an object with the new created user",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "luffy",
        "name": "monkey D",
        "avatar_url": "link to an image"
      }
    }
  },

  "GET /api/users/:username": {
    "description": "Serves a user object matching the given username",
    "queries": [],
    "exampleResponse": {
      "user": [
        {
          "username": "aUserName",
          "name": "name",
          "avatar_url": "link to an avatar"
        }
      ]
    }
  }
}
